<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Python学习05天]]></title>
    <url>%2Fposts%2F21991%2F</url>
    <content type="text"><![CDATA[主要内容： 字典的介绍和基本使用； 遍历字典和字典嵌套相关知识； 字典及其使用在Python中，字典是一系列键—值对。每个键都与一个值相关联，你可以使用键来访问与之 相关联的值。与键相关联的值可以是数字、字符串、列表乃至字典。事实上，可将任何Python对 象用作字典中的值。在Python中，字典用放在花括号{}中的一系列键—值对表示。键—值对是两个相关联的值。指定键时，Python将返回与之相关联的值。键和值之间用冒号 分隔，而键—值对之间用逗号分隔。在字典中，你想存储多少个键—值对都可以。最简单的字典只有一个键—值对。 123alien_0 = &#123;'color': 'green', 'points': 5&#125;print(alien_0['color']) print(alien_0['points']) 访问字典的值要获取与键相关联的值，可依次指定字典名和放在方括号内的键。 12alien_0 = &#123;'color': 'green'&#125;print(alien_0['color']) 字典中可包含任意数量的键—值对。 1alien_0 = &#123;'color': 'green', 'points': 5&#125; 添加键-值对字典是一种动态结构，可随时在其中添加键—值对。要添加键—值对，可依次指定字典名、用 方括号括起的键和相关联的值。 1234alien_0 = &#123;'color': 'green', 'points': 5&#125;print(alien_0)alien_0['y_position'] = 25print(alien_0) 运行结果: 12&#123;'color': 'green', 'points': 5&#125; 13&#123;'color': 'green', 'points': 5, 'y_position': 25&#125; 注意，键—值对的排列顺序与添加顺序不同。Python不关心键—值对的添加顺序， 而只关心键和值之间的关联关系。 创建一个空字典方法：用一对空的花括号定义一个字典，再分行添加各个键—值对。使用字典来存储用户提供的数据或在编写能自动生成大量键—值对的代码时，通常都需要先 定义一个空字典。 代码: 123alien_0 = &#123;&#125;alien_0['color'] = 'green' alien_0['points'] = 5print(alien_0) 结果: 1&#123;'color': 'green', 'points': 5&#125; 修改字典中的值要修改字典中的值，可依次指定字典名、用方括号括起的键以及与该键相关联的新值。 代码示例: 1234alien_0 = &#123;'color': 'green'&#125;print("The alien is " + alien_0['color'] + ".")alien_0['color'] = 'yellow'print("The alien is now " + alien_0['color'] + ".") 运行结果: 12The alien is green.The alien is now yellow. 删除键—值对对于字典中不再需要的信息，可使用del语句将相应的键—值对彻底删除。使用del语句时， 必须指定字典名和要删除的键。 123alien_0 = &#123;'color': 'green', 'points': 5&#125;print(alien_0)del alien_0['points'] print(alien_0) 遍历字典一个Python字典可能只包含几个键—值对，也可能包含数百万个键—值对。鉴于字典可能包含 大量的数据，Python支持对字典遍历。字典可用于以各种方式存储信息，因此有多种遍历字典的 方式:可遍历字典的所有键—值对、键或值。 遍历所有的键-值对123456789user_0 = &#123; 'username': 'efermi', 'first': 'enrico', 'last': 'fermi',&#125;for key, value in user_0.items(): print("\nKey: " + key) print("Value: " + value) for语句的第二部分包含字典名和方法items()，它返回一个键—值对列表。 遍历字典中的所有键keys()获取字典的所有值。 代码示例: 12345678favorite_languages = &#123; 'jen': 'python', 'sarah': 'c', 'edward': 'ruby', 'phil': 'python', &#125;for name in favorite_languages.keys(): print(name) 运行结果: 1234jensarahedwardphil 遍历字典中的所有值values()获取字典的所有值。set()可以去除重复的值。 代码示例: 123456789101112favorite_languages = &#123; 'jen': 'python', 'sarah': 'c', 'edward': 'ruby', 'phil': 'python', &#125;for name in favorite_languages.values(): print(name)print("去重复的值")for name in set(favorite_languages.values()): print(name) 运行结果: 12345678pythoncrubypython去重复的值pythoncruby 嵌套有时候，需要将一系列字典存储在列表中，或将列表作为值存储在字典中，这称为嵌套。可以在列表中嵌套字典、在字典中嵌套列表甚至在字典中嵌套字典。 字典列表代码示例: 12345678alien_0 = &#123;'color': 'green', 'points': 5&#125;alien_1 = &#123;'color': 'yellow', 'points': 10&#125;alien_2 = &#123;'color': 'red', 'points': 15&#125;aliens = [alien_0, alien_1, alien_2]for alien in aliens: print(alien) 运行结果: 123&#123;'color': 'green', 'points': 5&#125;&#123;'color': 'yellow', 'points': 10&#125;&#123;'color': 'red', 'points': 15&#125; 在字典中存储列表每当需要在字典中将一个键关联到多个值时，都可以在字典中嵌套一个列表。 代码示例: 1234pizza = &#123; 'crust': 'thick', 'toppings': ['mushrooms', 'extra cheese'], &#125; 列表和字典的嵌套层级不应太多。如果嵌套层级比前面的示例多得多，很可能有更简单 的解决问题的方案。 在字典中存储字典代码示例: 1234567891011users = &#123; 'aeinstein': &#123; 'first': 'albert', 'last': 'einstein', 'location': 'princeton', &#125;, 'mcurie': &#123; 'first': 'marie', 'last': 'curie', 'location': 'paris', &#125;,&#125; 首先定义了一个名为users的字典，其中包含两个键:用户名&#39;aeinstein&#39;和&#39;mcurie&#39;; 与每个键相关联的值都是一个字典，其中包含用户的名、姓和居住地。]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>学习</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Python学习04天]]></title>
    <url>%2Fposts%2F43494%2F</url>
    <content type="text"><![CDATA[主要内容：条件判断和if语句的使用； 认识条件判断在日常开发中需要用到如果怎么样就怎么样，否则就怎么样的逻辑。主要采用if语句来实现的。 例如：假设你有一个汽车 列表，并想将其中每辆汽车的名称打印出来。对于大多数汽车，都应以首字母大写的方式打印其 名称，但对于汽车名&#39;bmw&#39;，应以全大写的方式打印。下面的代码遍历一个列表，并以首字母大 写的方式打印其中的汽车名，但对于汽车名&#39;bmw&#39;，以全大写的方式打印: 123456cars = ['audi', 'bmw', 'subaru', 'toyota']for car in cars: if car == 'bmw': print(car.upper()) else: print(car.title()) 运行结果: 1234AudiBMWSubaruToyota 条件测试每条if语句的核心都是一个值为True或False的表达式，这种表达式被称为条件测试。 判断是否相等相等的语句是:==，赋值的语句是:=，两者需要作区分。 12c = 'like'print(c == 'Like') 运行结果:False 如果需要或略大小写可以采用将其转化为小写的方式，函数为:lower()。其余的逻辑同理。 判断是否不相等语句:!=，其余的逻辑类似，不过多阐述。 比较数字 条件语句中可包含各种数学比较，如小于、小于等于、大于、大于等于。 代码示例： 123456&gt;&gt;&gt; num = 29&gt;&gt;&gt; num &lt; 21False&gt;&gt;&gt; num &gt;= 4True&gt;&gt;&gt; 多个条件判断多个条件判断将条件采用关键字and连接，只有全部为true才能满足，否则整体条件就为false。如果是或者的关系采用关键字or，只要满足其中的一个整体条件就为true。如果不确定优先级(或者可读性)的问题，可以采用括号就没个单个条件括起来。 代码示例： 1234567891011121314&gt;&gt;&gt; age_0 = 22 &gt;&gt;&gt; age_1 = 18&gt;&gt;&gt; age_0 &gt;= 21 and age_1 &gt;= 21 False&gt;&gt;&gt; age_1 = 22&gt;&gt;&gt; age_0 &gt;= 21 and age_1 &gt;= 21 True&gt;&gt;&gt; age_0 = 22 &gt;&gt;&gt; age_1 = 18&gt;&gt;&gt; age_0 &gt;= 21 or age_1 &gt;= 21 True&gt;&gt;&gt; age_0 = 18&gt;&gt;&gt; age_0 &gt;= 21 or age_1 &gt;= 21 &gt;&gt;&gt; False 采用括号的形式提高可读性和解决优先级的问题。 1(age_0 &gt;= 21) and (age_1 &gt;= 21) 检查特定的值是否包含在列表中要判断特定的值是否已包含在列表中，可使用关键字in。 代码示例： 12345&gt;&gt;&gt; requested_toppings = ['mushrooms', 'onions', 'pineapple']&gt;&gt;&gt; 'mushrooms' in requested_toppingsTrue&gt;&gt;&gt; 'pepperoni' in requested_toppingsFalse 检查特定的值是否不包含在列表中确定特定的值未包含在列表中，可使用关键字not in。 使用方法和上面判断是否在列表中一致。 布尔表达式布尔表达式的结果要么为True，要么为False,布尔值通常用于记录条件。 if语句简单的if语句代码示例: 123num = 34if num &gt;= 18: print("恭喜，您已经成年") if-else语句代码示例: 12345num = 16if num &gt;= 18: print("恭喜，您已经成年")else: print("你好，你未成年呢") if-elif-else 结构1234567num = 16if num &gt;= 18: print("恭喜，您已经成年")elif num &gt; 15: print("你好，还差3年就成年")else: print("122") elif可以连续多次使用，多加判断即可。同时在某些时候可以省略else的部分。 使用if语句处理列表检查特殊元素1234567requested_toppings = ['mushrooms', 'green peppers', 'extra cheese']for requested_topping in requested_toppings: if requested_topping == 'green peppers': print("Sorry, we are out of green peppers right now.") else: print("Adding " + requested_topping + ".")print("\nFinished making your pizza!") 循环的时候可以进行判断，然后即可，同时还可以判断是否为空列表。]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>学习</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Python学习03天]]></title>
    <url>%2Fposts%2F56807%2F</url>
    <content type="text"><![CDATA[主要内容： 使用列表：切片，遍历切片，复制切片； 元组的定义，遍历元组，修改元组变量； 使用列表切片要创建切片，可指定要使用的第一个元素和最后一个元素的索引。与函数range()一样，Python 在到达你指定的第二个索引前面的元素后停止。要输出列表中的前三个元素，需要指定索引0~3， 这将输出分别为0、1和2的元素。 代码示例: 123456players = ['charles', 'martina', 'michael', 'florence', 'eli']print(players[0:3]) # 取从索引0开始到第三个结束，最后输出前三个print(players[0:3]) # 输出从索引1到4结束，print(players[:4]) # 没有索引就从列表开头开始，到指定的索引值结束print(players[2:]) # 没有结束索引就知道最后结束print(players[-3:]) # 倒数第三个 运行结果: 12345['charles', 'martina', 'michael']['charles', 'martina', 'michael']['charles', 'martina', 'michael', 'florence']['michael', 'florence', 'eli']['michael', 'florence', 'eli'] 遍历切片前面我们遍历列表的时候采用for语句来实现的，同理，切片同样可以采用for语句来实现。 代码示例: 1234players = ['charles', 'martina', 'michael', 'florence', 'eli']print("Here are the first three players on my team:")for player in players[:3]: print(player.title()) 运行结果: 1234Here are the first three players on my team:CharlesMartinaMichael 复制切片要复制列表，可创建一个包含整个列表的切片，方法是同时省略起始索引和终止索引([:])。 这让Python创建一个始于第一个元素，终止于最后一个元素的切片，即复制整个列表。复制的过程中可以进行赋值或者修改操作。例如新增一个元素。 代码示例: 12345678my_foods = ['pizza', 'falafel', 'carrot cake']friend_foods = my_foods[:]my_foods.append('cannoli')friend_foods.append('ice cream')print("My favorite foods are:")print(my_foods)print("\nMy friend's favorite foods are:")print(friend_foods) 代码结果: 12345My favorite foods are:['pizza', 'falafel', 'carrot cake', 'cannoli']My friend's favorite foods are:['pizza', 'falafel', 'carrot cake', 'ice cream'] 元组定义元组列表是可以修改的，主要适合存储程序在运行期间可能会变化的数据。如果需要创建不可修改的值就需要用元组，所以元组可以理解为:不可被修改的列表。但是元组采用的是方括号来标识。和列表同理，均可采用索引来访问元素。 代码示例: 123change_list = ('one','two','three','four') #定义一个元组 print(change_list[0]) #取元组索引为0 的值change_list[1] = 'hello' #修改元组中索引为1的值 会被报错，因为元组不可以被修改。 遍历元组遍历元组和遍历列表一样，采用for 来实现。 代码如下: 123change_list = (1,2,3,4)for number in change_list: print(number) 运行结果: 12341234 修改元组变量修改元组的变量不等于修改元组的元素，也就是给存储元组的变量赋值。 代码示例: 1234567change_list = (1,2,3,4)for number in change_list: print(number) change_list = (11,22,33,444)for number in change_list: print(number) 运行结果: 123456781234112233444]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>学习</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Python学习02天]]></title>
    <url>%2Fposts%2F3226%2F</url>
    <content type="text"><![CDATA[主要内容： 遍历列表，创建列表，range()函数使用； 统计列表数值，列表解析； 通过循环的方式遍历列表通常情况下，我们需要对列表的所有元素进行操作，这个时候就需要遍历整个列表。循环采用for。 语法: 12for change_name in list_name: print(change_name) 代码示例: 123magicians = ['alice', 'david', 'carolina']for magician in magicians: print(magician) 运行结果: 123alicedavidcarolina 循环的含义其实是将列表的值逐一取出，然后进行其他操作。例如拼接、赋值、运算等。 代码示例: 123magicians = ['alice', 'david', 'carolina']for magician in magicians: print(magician.upper() + ", that was a great trick!") 运行结果: 123ALICE, that was a great trick!DAVID, that was a great trick!CAROLINA, that was a great trick! 注意事项: python中语法需要注意的主要是忘记缩进和不必要的缩进; 列表后面的:不能遗漏; 对于位于for语句后面且属于循环组成部分的代码行，一定要缩进。 例如: 123magicians = ['alice', 'david', 'carolina']for magiciand in magicians:print(magiciand) 错误提示: 1234 File "for.py", line 3 print(magiciand) ^IndentationError: expected an indented block 创建数值列表range()函数认识range()函数产生指定范围的随机值。 代码示例: 12for value in range(1,7): print(value) 运行结果: 1234567➜ day2 python range.py123456 需要注意的是这是函数的使用，可以理解为[1,7); range()函数创建数字列表要创建数字列表，可使用函数list()将range()的结果直接转换为列表。如果将range()作为list()的参数，输出将为一个数字列表。同时还可以指定步长。 代码示例: 1234range_num = list(range(1,4))print(range_num)range_num_two = list(range(1,20,2))#指定步长print(range_num_two) 运行结果: 12[1, 2, 3][1, 3, 5, 7, 9, 11, 13, 15, 17, 19] 统计数字列表的值min() :找出列表的最小值;max() :找出列表的最大值;sum() :求和; 代码示例: 1234list = [1,2,3,4,5,6,7]print(min(list))print(max(list))print(sum(list)) 运行结果: 1231728 列表解析代码示例: 12squares = [value**2 for value in range(1,11)]print(squares) 要使用这种语法，首先指定一个描述性的列表名，如squares;然后，指定一个左方括号， 并定义一个表达式，用于生成你要存储到列表中的值。在这个示例中，表达式为value**2，它计 算平方值。接下来，编写一个for循环，用于给表达式提供值，再加上右方括号。]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>学习</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Python学习01天]]></title>
    <url>%2Fposts%2F7874%2F</url>
    <content type="text"><![CDATA[主要内容： 列表概念，访问列表元素，修改列表元素; 删除列表元素，添加列表元素，组织列表; 列表概念列表由一系列按特定顺序排列的元素组成。可以创建包含字母表中所有字母、数字0~9或 所有家庭成员姓名的列表;也可以将任何东西加入列表中，其中的元素之间可以没有任何关系。鉴于列表通常包含多个元素，给列表指定一个表示复数的名称(如letters、digits或names)是 个不错的主意。 语法用方括号([])来表示列表，并用逗号来分隔其中的元素。 12bicycles = ['demo', 'chen', 'sen', 'lin']print(bicycles) 访问列表元素访问列表中的元素是通过索引获取的，而索引是从0开始的。 12345bicycles = ['demo', 'chen', 'sen', 'lin']print(bicycles)print("取第0个索引:" + bicycles[0])print("取第1个索引:" + bicycles[1])print("取第最后一个索引的值:" + bicycles[-1]) 运行结果： 12345➜day1 python dsc.py['demo', 'chen', 'sen', 'lin']取第0个索引:demo取第1个索引:chen取第-1个索引:lin 结合第0天的知识，我们现在对列表元素进行拼接的操作。 123bicycles = ['demo', 'chen', 'sen', 'lin']res = "My name is " + bicycles[0] + "!";print(res) 运行结果： 1My name is demo! 修改列表元素修改元素的值可以理解为通过索引获取需要修改的值，然后重新赋值。 代码示例: 1234bicycles = ['demo', 'chen', 'sen', 'lin']print(bicycles)bicycles[1] = 'Name';print(bicycles) 可以理解为: 123456bicycles = ['demo', 'chen', 'sen', 'lin']print(bicycles)change_res = bicycles[1];change_res = 'Name';bicycles[1] = change_res;print(bicycles) 运行结果: 12['demo', 'chen', 'sen', 'lin']['demo', 'Name', 'sen', 'lin'] 添加列表元素添加元素主要有两种方式：列表末尾添加元素，列表中插入元素(包含开头)。其中不能影响其他的元素。 代码示例: 1234bicycles = ['demo', 'chen', 'sen', 'lin']print(bicycles)bicycles.append('good')print(bicycles) 运行结果： 12['demo', 'chen', 'sen', 'lin']['demo', 'chen', 'sen', 'lin', 'good'] 甚至可以创建一个没有任何的元素空的列表，然后不断的追加元素。或者可以从开头或者中间插入元素。 代码示例: 12345null_list = []null_list.append('hello')null_list.append('senlin')null_list.append('chen')print(null_list) 运行结果: 1['hello', 'senlin', 'chen'] insert()可以在任意位置添加元素。 代码示例: 123in_list = ['hello', 'senlin', 'chen']in_list.insert(1, 'name')print(in_list) 运行结果: 1['hello', 'name', 'senlin', 'chen'] 删除列表元素删除元素的方法有:del删除、pop()弹出删除、根据值删除。 代码示例: 12345678list = ['on','list','time','man','like','goods']del list[0]print("删除第0个元素的值",list)print("弹出删除第最后一个元素的值",list.pop())print("弹出删除第一个元素的值",list.pop(1))print(list)print("根据值删除",list.remove('man'))print(list) 运行结果: 123456删除第0个元素的值 ['list', 'time', 'man', 'like', 'goods']弹出删除第最后一个元素的值 goods弹出删除第一个元素的值 time['list', 'man', 'like']根据值删除 None['list', 'man'] 组织列表组织列表中主要是针对列表进行排序等操作。排序分为临时排序(sorted())和永久排序(sort())。reverse()不是指按与字母顺序相反的顺序排列列表元素，而只是反转列表元素的排 列顺序:reverse()永久性地修改列表元素的排列顺序，但可随时恢复到原来的排列顺序，为此只需对列表再次调用reverse()即可。 代码示例: 123456789cars = ['bmw', 'audi', 'toyota', 'subaru']cars.sort()print(cars) #根据字母永久排序cars = ['bmw', 'audi', 'toyota', 'subaru']cars.sort(reverse=True)print(cars) #根据字母相反方向永久排序cars = ['bmw', 'audi', 'toyota', 'subaru']cars.reverse()print(cars) #倒着打印列表 运行结果: 1234['audi', 'bmw', 'subaru', 'toyota']['audi', 'bmw', 'subaru', 'toyota']['toyota', 'subaru', 'bmwmw', 'audi']['subaru', 'toyota', 'audi', 'bmw'] 获取元素长度代码示例: 123cars = ['bmw', 'audi', 'toyota', 'subaru']res = len(cars)print(res) 运行结果为：4 至此，第三章的列表已经学习完毕，本章的函数不是特别多。主要的知识点有概念，获取值，修改和排序等操作。]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>学习</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Python学习00天]]></title>
    <url>%2Fposts%2F39399%2F</url>
    <content type="text"><![CDATA[主要内容： Python安装运行，变量； 数据类型：字符串，数字，空白，注释； 安装和准备主要查询官网文档即可解决。官网地址：https://www.python.org Hello World终端运行 命令行运行新建以.py结尾的文件，例如hello.py;打开该文件，输入：print(&quot;Hello World&quot;);,最后运行：python hello.py ; 数据类型变量基本使用变量就是保存一个值的信息，将其存储起来，随着程序后面的不断赋值（要求存储一个新的值），该变量的值也会随着改变。如下图所示，change变量就是被重新赋值了。 运行结果如下： 123➜day0 python hello.pyHello SenLin Chen!Hello Python SenLin! 语法和规则语法：变量名=赋值的值，例如change是变量名，Hello SenLin Chen!是赋值的值。这样变量change的值就是:Hello SenLin Chen!; 规则： 变量名只能包含字母、下划线和数字。数字不能开头。不能包含空格。例如:12_name;合格写法：user_name； 不能用python的关键字和函数名作为变量名，因为已经被用了，这么想就没事了。 变量名应该见名知意，尽可能简短。 字符串含义用引号括起来就是字符串。其中有单引号和双引号。例如：&#39;string&#39;,&quot;user_name&quot;等。 修改字符串大小写常用方法: title():将字符串的首字母设置为大写; upper():将字符串全部设置为大写; lower():将字符串全部设置为小写; 代码示例: 1234change = 'hello,my name is demo chen!'print(change.title())print(change.upper())print(change.lower()) 运行结果: 1234➜ day0 python hello.pyHello ,My Name Is Demo Chen!HELLO ,MY NAME IS DEMO CHEN!hello ,my name is demo chen! 拼接字符串使用场景:多个字符串合并为一个字符串形式。 使用方法:采用+的形式来拼接。 代码示例: 123user = 'hello'name = 'senlin'user_name = user + '_' + name 运行结果: 12➜day0 python user_name.pyhello_senlinenlin 添加空白制表符:\t;换行:\n ;可以组合使用。 删除空白&#39;demo &#39;不等于‘demo’;所以需要去除空白。 相关函数: rstrip():去除末尾的空白;lstrip():去除开头的空白;strip():去除开头和末尾的空白; 数字数字主要有整数和浮点数。主要的运算有:加(+)、减(-)、乘(*)、除(/)、乘方(**)等 代码示例: str():将非字符串表示为字符串。 注释#为Python注释的语法。 代码示例:]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>学习</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[购买付费软件的一点感想]]></title>
    <url>%2Fposts%2F50238%2F</url>
    <content type="text"><![CDATA[使用付费还免费软件？ 是否应该付费？ 如何选择付费软件？ 付费还是免费？以前我使用Windows的时候，如果遇到付费的软件我都会选择注册机、注册码、破解工具等方式来解决，同时某盘还存了很多的破解的软件或者工具。现在我会逐步选择付费的软件，同时选择同类产品比较好的软件。因为我觉得付费购买是对人家的一种尊重和支持。同理，我是一个开发者，我希望我的作品别人也能够支持，支持别人其实自己也会得到支持。 如何付费？一般会根据自己的需求来判断自己是否需要这个软件的功能，是否能够解决我自己的问题？是否能够满足的我的需要？然后对比同类产品中付费和免费的相关的产品，如果免费的就足够就不需要考虑付费了。例如卸载软件AppCleaner，还有比它更加优秀的产品，但是我选择这个就可以了。同理，如果付费中我能够接受的价格能够满足就可以了，没有必要去选择最贵的活着最好的，主要是最适合自己的。例如剪切板工具有很多，我选择了iPaste，专注于剪切板功能。 选择付费是一种需要，也是一种支持，更是一种态度。 付费软件列表iPhone 软件名 价格(元) Price Tag 30 V2er 8 白描 1+6 熊猫吃短信 1 Picsew 1 凤凰新闻 Pro 1 Holo 0.00 小历 1 落格输入法 3 Piiic 1 iPaste 58.00 TextGrabber 30.00 X.cat Pro 40 Cosmos 0.00 Shu 12.00 鲨鱼记账Pro 1 Mac 软件名 价格(元) Clearview 78 MWeb 98 Yummy FTP Pro 198.00 iPaste 58 Xnip 12/年 Disk Drill 189.00 Total Video Converter 0.00 Folx pro 5 59.00 iStat Menus 6 14.00 暂时就想起来了这么点。。]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>生活</tag>
        <tag>软件</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[《把时间当作朋友》阅读笔记]]></title>
    <url>%2Fposts%2F60177%2F</url>
    <content type="text"><![CDATA[李笑来，原新东方老师，现笑来教育信息咨询有限公司合伙人。 他，经历丰富，与众不同。东北人，本科学财会，毕业干销售，惯于洞察他人心理，阴差阳错成了留学考试名师，授业解惑，乐此不疲。 他写书，且畅销。著有畅销书《TOEFL核心词汇21天突破》、《TOEFL高分作文》——常年位于同类图书销售排行榜首。授课风格以朴实、有效见长，注重培养学生的独立思考能力。 本文主要是学习《把时间当作朋友-升级你的操作系统》的精华笔记。 第0章 困境缘起一般我们经常说的是就是“没有时间”。真的没有时间吗？ 慌乱于是我们开始着急，开始慌乱。 解决一个不争的事实：时间是不可被管理的。于是，我们开始反思自己，一切的问题都在自己身上。这一切都需要积累，只有积累到达足够的境界，时间就是我们的朋友，否则就是敌人。人是由概念和方法论组成的。一切靠学识决定，与其花时间管理时间，不如花时间提高自我解决问题的效率。 第1章 醒悟大脑我们竟然可以用自己的大脑控制自己的大脑。你的大脑并不是你，你的大脑是（属于）“你的”大脑，运用心智获得解放，不再让自己“跟着感觉走”，成为大脑的奴隶，而是翻身做大脑的主人。 心智一个人的心智就是器过往获得的一切知识以及经验的总和。其中包括基于这些知识和经验造就的思考方式、思考模式。心智，上不封顶下无保底，一旦打开，就可能因为学习而像病毒一样疯狂发展，与此同时，学习能力相应大幅度增长。 第2章 现实速成绝无可能期望速成有两个主要原因：第一个是希望自己的欲望马上得到满足；第二个是不懂“有些阶级是无法跨越的”。 交换才是硬道理“我要”的欲望可以用“我有”的东西来满足。如果行李是必须的，那么背动行李的唯一办法不是减负，而是让自己变强。 完美用不存在人人都希翼完美，只可惜，完美并不存在。越是能力差的人，越有那种非常不现实又极其脆弱的完美主义倾向。生活本来就不完美，谁的生活不是磕磕绊绊？谁又在死去的时候没有一丝遗憾？现实如此只能接受。 未知永远存在未知因素给人们带来的心理压力远远超出一般人的想象。首先我们要承认自己不可能全知全晓。其次，对于未知我们要分为两种，一种是永远不能解决的，一种是可预见的未来可以解决。当遇到解决不了的问题时候，我们可以先记下来，然后继续前行。 现状无法马上摆脱人们往往会低估环境的巨大力量。尽管天分很重要，但一个人的能力主要靠积累获得。心怀梦想的时间越长，它沉没的成本就越高。接受现状最优的策略是有什么做什么，有什么用什么，做什么都做好，用什么都用好。 与时间做朋友与时间做朋友方法很简单：用正确的方法做正确的事。几乎一切愚蠢的行为都来自于否定现实、逃避现实。只有接受现实，才能脚踏实地，避免心浮气躁，好高骛远。时间是现实的人的朋友，是不现实的人的敌人。时间不是故意这么做的，只不过事实就是如此。 第3章 管理估算时间错误估算任务所需时间是最常见，也是最致命的错误。要想提高估算时间的能力，就要从现在开始养成习惯：做任何事情之前先判断其熟悉程度（陌生程度），再据此判断估算完成任务所需要的时间。 及时行动拖延的主要原因是，首先很多人做事拖延就是“不求有功，但求无过”心态在作祟。只要做事，就一定会出问题。这是现实。其次就是过分在乎外界的评价。如果我们明白了这是现实，就要把这种认识纳入自己的心智，就不会对“最后期限”产生幻觉。所以唯一的策略就是：现在就开始。 直面困难就算没有低估完成任务所需要的时间，就算已经迅速开始执行任务，很多人还是没办法及时完成任务。这类效率低下的原因：回避困难。所有真正踏实做事的人都知道，任何任务的绝大部分都是枯燥而无趣的，所谓有创意的部分，可能连1%都不到。 关注步骤任何事情有三个方面：内容、原因、方法；任何任务有三个属性：何事、何因、何法；在做任何事情之前，通过关注“方法”去反复拆分任务，最终确认每个子任务都是可以完成的，这是一个人不可或缺的功课。这样的习惯会让一个人变得现实、踏实。 并行串行提高效率指的是：原本只能串行的完成的两个任务现在可以并行完成。一些早期的计算机是单任务操作系统，为了提高效率现在有多任务操作系统。很直接的体现就是：DOS是没有办法理解Unix的。让自己拥有“多任务操作系统”方法：可以将大任务分成足够多又不太多的小任务；划分自己的时间。 感知时间可以尝试通过“事件日志”纪录时间。除了自己亲身经历事件一概不记，尽量不记感受，不记感想，只记录事件本身。柳比歇夫的日志是：事件−时间日志。李敖的日志是只记录事件名称，是一种基于结果的纪录。两者差别在于：基于过程的纪录要比基于结果的纪录更为详细。基于过程的纪录有一个更大的好处，结果不好的时候可以更容易找到原由。管理时间基本不可能，那么解决办法是想尽一切办法真正了解自己，真正了解时间，精确感知时间，而后再想尽一切办法使自己以及自己行为和时间合拍，也就是“与时间做朋友”。 列表列表从来都是最有效的组织工具之一。最方便的列表工具是纸和笔。列表也没有必要工整，只要我们自己能看懂就够了。列表一定要随手可及。最重要的任务只有一个。判断一件事情是否真的重要，标准只有一个：是否对目标（无论是长期还是短期）的实现有益。制作专门的下一阶段任务列表。如果有什么新鲜主意不要放弃，只需要启用另一个列表（下一阶段的任务列表），把他们记录下来，然后马上回到当前的任务列表，专注于现在应该完成的任务上。给每个任务制定一个核对列表。列表一旦开始运作，就一定要执行到底。 流程要想加快执行重复性任务的速度，只需在遇到重复性任务时先将其做完一次，然后马上总结、整理，搞清流程，再进一步实践把它变成“闭着眼睛也能做好”的事。这是提高效率、减少失误的根本手段。 预演做任何事情之前，尝试把将要做的事情整个过程在脑子里预演一遍甚至数遍。只有经过大量的预演或者练习，才能够在实际执行任务的过程中有出色的表现。 验收很多人做事半途而废、不了了之的根本原因在于从未想过要给自己执行 任务时的表现设计一个验收机制。最基本的验收机制是针对最终结果的，部 分有经验的人因为在做事之前总是更关注步骤，并会按照需求将任务拆分成 若干子任务，所以，他们甚至会为每一个步骤设计相应的验收机制。 从更高的层面上说，设计验收机制也是任何一个领导者必须拥有的基本能力。哪怕你领导的只是一个很小的团队，你也必然要向团队成员指派各种各样的任务。在这种情况下，如果你没有设计验收机制，最终的结果肯定会让你非常失望，因为缺少验收机制会使团队成员对自己的工作质量毫不介意， 长此以往，团队的执行力将等于零，作为困队领导者的你也必须承担失败的责任。 第4章 学习学习是投资回报率最高的行为每掌握一项新的技能，就感觉自己像重生了一样。学习最关键的一点：任何知识的获取，都是不可逆的。学习的重要起点是：起码学会一种技能。总之，千万不要拒绝学习。 基本途径获取更多知识几乎是我们开拓自身心智的唯一手段。所有人过去知识最基础的手段就是“体验”。比体验更高级的获取知识的手段是“试错”。比较聪明且重要得多的获取知识的手段是“观察”。但是“体验”、“试错”、“观察”都有局限。原因：首先大量的知识无法通过个人亲身“体验”获得。其次有些知识很难通过“试错”获得。所以对此三者进行补充，那就是“阅读”。阅读是人们获取知识更加重要的手段。阅读突破了个人“体验”或“试错”的局限——“体验”和“试错”都只能通过自己，然而通过阅读可以获得别人的体验和试错结果。 主要手段准确的说：正确的思考，才是获得真正意义上的知识的主要手段。思考、求知的过程，某种意义上就是探求因果关系的过程。开启心智、正确思考更值得我们投入时间和精力。 经验局限学习过程最大的障碍就是经验主义。个体经验的局限案例：强光喷嚏反射。群体经验局限在于人类寿命有限。不仅存在无法通过个体或者群体经验获得的知识，还存在与现有经验相悖的知识。 自学能力自学能力的基础就是阅读理解能力。检索能力建立在相当熟练的阅读理解能力基础之上。写作能力在自学能力中占据重要位置。实践能力是自学能力最终转化为真正价值的根本。要永远保持开放的心态。 在频繁失望甚至绝望的情况下居然坚持了那么久，最后我们会发现，原来我们是这么地有毅力啊！ 第5章 思考相关命题有70%以上的人分不清原命题和逆命题之间的区别。每天有无数人因为分不清原命题和逆命题而被他左右。混淆原命题和逆命题，抹杀两者之间的差别，是广告设计者最常用，最舍不得放弃的手段。 举证责任针对某一论点，对立双方的举证难度并非对称的。首先，举证难度受证人能力的影响，因为每个人的学识和专业不同。其次，举证难度受当时所在社会的整体知识水平的影响。最后，举证难度还受需要证明的结论与当时普遍接受的知识相符程度的影响。 对立论证人们可能基于一模一样的原因作出截然相反的决定。也就是用相同的论证证明截然相反的论点。实际上所谓的情商，从根源上朴素地看，还是思考力的问题。 辨析感悟我们都需要清楚道理和感悟的区别。成功者其实没有必要、没有义务，也往往没有足够的时间去阐述所有的细节。与其关注成功者不妨反其道而行之：努力从失败者身上汲取经验。只有经过自己的仔细分辨，真正的成功者的宝贵经验才是无价的。需要额外注意的是，一方面多花心思分辨，另一方面多花时间真正了解自己，以便能够避开“一概而论，生搬硬套”可能带来的灾难。 克服恐惧道理都明白，可是做不到，这是无数人生活中无数人在生命中无数次遭遇的尴尬。人人都有弱点，因为人人都会有恐惧。不要以为我们拥有无比的勇气，不要以为自己没有恐惧，总有那么一刻，我们的勇气无法抵御我们的恐惧。所以，我们有什么理由不能理解别人的恐惧呢？ 辅助工具语言是一种便宜（甚至是免费）而又有效的辅助工具。当我们试图批判一个错误的立场的时候，即使是在完全正确地批判的情况下，也总会有这样的抵抗，例如：难道就没有一点可取之处吗？ 勤于思考独立思考，只不过是从别人那里知道一个结论的时候，自己动脑重新推演一遍，看看结论的过程有没有漏洞和不合理的地方衡量一下到底有没有道理的过程。权威不是用来迷信的，权威在更多的时候本应该是我们认识世界的辅助工具。 思维陷阱概念不清。学习任何东西最重要就是搞清它们所有的基础概念。永远都是那些能把概念理解透彻、区分清楚的人才能清楚地思考世界，进而改变整个世界。拒绝接受不确定性。拒绝接受不确定性的一个根源在于害怕复杂、奢望简单。 因果关系因果关系往往分析往往不像看上去那么简单，人们往往因为因果关系分析错误而得出错误的结论且不自知，进而莫名其妙做出错误决定，走上错误的道路。 基础。外因会影响内因，内因同样会影响外因。它们相互影响，互为因果。要做一个用心的人，要用心做事，因为这个世界其实有“心”。分析因果关系是我们在决定是否接受某个观点之前必做的功课。所谓的思维缜密，其实并非常人想象得那么高不可攀，事实上可能恰恰相反—— 做到并不难。很多人做不到的原因无非两个：习惯性拒绝思考和不懂得应该如何思考。而前者往往是由后者长期作用的。 第6章 交流学会倾听正如没有人会认为自己不会说一样，几乎没有人会认为自己不会倾听。可事实上，大多数人不懂的应该如何有效的倾听。人类讲话的速度往往低于思考的速度，所以我们在倾听的过程中常常容易走神。如此这般下去终究会真正错过重要的信息。必须想办法获得一种或者一些用于鉴定已知信息有效性的知识。 那么如何倾听？ 为了做到真正有效的倾听，最需要克制的就是“过早质疑”。 在倾听过程中，我们可要利用多余的脑力处理两个方向的信息：“回顾”与“预期”。 一旦决定倾听，就要主要主动帮助说者进入“倾诉”状态。 说与不说有一种极为常见却又几乎总是被忽略的现象：明明是同样的话，自己说出来就不像那么回事。通过努力和积累成为能说更多话的人。有时候，我们知道自己说的是对的，但是没有人听得进去，绝大多数人面临这样的情况多少有些失落，甚至愤怒，可事实上，这往往说明一个问题 ：还没有赢得足够的重视。 交流守则 有意义讨论的前提是双方不仅要“相互竞争”，更要“相互合作”。 真理是独立存在的，他从来不会依附于任何个人或者集体。 真理不变，也不会因任何人而变；不停变化的只是人们对真理的理解或者解释。 正确复述沟通在很多时候并不像看起来那么容易。在这个过程中我们常常会因为某个参与者而导致“有效沟通根本不可能达成”。如果甲乙两个人需要沟通，那么他们沟通的过程是：甲将他想法用语言表达出来，已用自己的方式去理解甲的语言，然后反过来再次进行。此过程可能重复多次。但是两者的编码、解码机制常常不相同。所以为了保证沟通顺利，往往需要添加一个验证机制，或者说反馈机制。 这就需要我们在生活或者工作中给予别人一个反馈或者回复，让对方对此事有一定的知情权这样才能保证事情的沟通顺畅，效率更高。 勤与反思在讨论问题的时候，我们常常会被对方“固执已见”挫败，但对方眼里，我们可能也是“固执已见”的，只不过是程度不同而已。 所以，我们更需要如何做呢？ 深刻了解经验的局限。摆脱经验主义的第一个技巧：了解经验的局限性； 时时刻刻保持警惕。经验需要归纳，更需要经过演绎来论证； 使用记录，使自己能够记住更多经验。做记录是一个很好的习惯； 通过观察和阅读汲取他人的经验。观察和阅读是扩充有限的自我经验的最好的手段； 试用类比来跨越未知与已知的障碍。类比思考几乎是跨越已知与未知之间鸿沟的唯一手段； 耐心等待以拥有不能快速获得的经验。遇到不理解的问题或者不确定的想法先记录下来，保持耐心。 第7章 应用兴趣首先，有些人并不是对自己正在做的事情没有兴趣，而是没有能力把目前正在做的事情做好。其次，人们常常说他们真正感兴趣的事情是其他事情。综上，我觉得兴趣不是那么重要，至少没有我们想象的那么重要。因为往往不是有兴趣才能做好，而是做好了才有兴趣。 方法方法固然重要，但是比起“用功”来说，方法几乎可以忽略不计。所有学习上的成功只依靠两件事：策略和坚持。而坚持本身就是最重要的策略。坚持就是重复；而重复就是，说到底就是时间投入，准确地说，是大量时间的投入。与其不停地寻找“更好的方法”，还不如马上行动。 痛苦对痛苦的深刻感受，会扭曲或者抹杀人们感知其他事物的能力。痛苦就是这样，一旦我们学会在痛苦的时候运用心智把自己的注意力转移到其他地方去，痛苦就几近自动消失，而且在它被我重新注意之前绝不会回来。 比较在很多人眼里，所谓的成功，不过是比较的产物，归根结底就四个字：高人一等。但是，比较是相对的，相对是永远没有尽头的。很多时候比较是一个坑，大坑。再干脆点说，比较是陷阱。 生活无法彻底回避比较，但是无须比较就可以获得快乐和幸福也同样很多，只不过常常被人忽略。其实比成功更重要的是成长。如果成功是和别人比较，那么成长就是和自己比较。显然，成长比成功意义更大。 运气首先，运气是存在的；其次，运气是有好坏之分的。但是，相信运气是缺乏自制力的表现。当好运气发生在自己身上时，我们应该开心，当坏运气降临在我们身上时，我们呢应该平静接受。心态很重要。尽管对生活不应该盲目乐观，但一定不能失望悲观。 人脉基于某种原因，生活中广受欢迎的人总是少数。所有的人都喜欢并重视甚至偏爱一种交换：公平交换。资源更多的人更喜欢也更可能可能与另外一个资源数量或者质量对等的人进行交换。所以，承认知己能力有限，是保持心理健康的前提。 自卑每一个人都有一个愿望中的自己，同时还有一个感觉中的自己。最佳状态是：愿望中的自己=真实中的自己=感觉中的自己。但是很多时候是约等于并非等于，但是也有部分人处于不等于状态。 作为社会的一员，大多数人并没有意识到，有时候，整个社会向他灌输的关联可能是错的。 优秀的人更容易自卑。 停止嘲笑他人。 忘记自己的优点。 在自己语言中，把“优点”和“缺点”这两个词换成“特点”。 适当地放纵一下自己。 灵感素材固然重要，但是，如果提前确定一个方向或者目标，就可能会积累很多原本想象不到的素材——惊喜连连。不要无谓的相信什么“突然闪现的灵感”的存在。灵感这东西就算存在，也不会平白无故出现的，而是肯定有来历的。所以，以此类推，所有的成功，在本质上都是一样的。先花上相当的时间和精力去锁定一个方向和目标。确定它现实可行之后，运用心智的力量，在这个方向上投入更多的时间，比更多再多一点的时间，“必然”就会产生。 鼓励永远鼓励身边的人，哪怕多少有些盲目。当我们不停地鼓励所有人的时候，最大的受益者其实是我们自己，因力最终我们会发现，自己开始进入一种他人无法想象的伏态，成为一个不需要他人鼓励的人。这一点很重要。因为很多人之所以做事裹足不前，浪费时间 甚至生命，原因就在于他们是必须获得别人的鼓励才敢于行动的人。可是，我们却能成为另外一种人——我们可以不需要被别人鼓励——这是一种境界。 效率任何人都不可能100%地有效率，至少不可能总是100%地有效率。确定自己是什么样的人，熟悉自己的专注的重点，然后通过一定的练习，进而控制我们的大脑。当一个人经过一段时间的训练后，分割时间的方法对他来说就没有必要了。因为，他应该已经可以比较自如的专注在他应该做的、非常重要的事情上了——无论这件事情是有趣还是无趣。 节奏我们应该把自己的生活节奏调的慢一点。想办法提前预支自己需要掌握哪些技能，在确定它们是自己可以通过练习真正熟练掌握的技能，而后制定长期的计划，一步一点稳步执行。 物极必反 不要盲目的试图减少睡眠时间。 尽量不要减少与家人交流的时间。 最好不要放弃自己的社交时间。 自我证明长久的观察和思考，有益干锻炼自己心气平和的能力，反正别人 如何认为、如何评价、如何议论根本没办法影响一个人所处的状态。但是，一旦某个人开始为此心烦意乱、坐卧不安，甚至为此有一些无聊的举动，那么他就不仅是倒霉，而且是可怜了， 因为他已经被别人左右了。被别人左右，是一个人相当可悲的状态之一。 第8章 积累坚信积累现状会影响一个人的心态。如果有一个人心态受到了现状的影响，那么他的行为和决策都会随之发生变化。进而，行为和决策的结果形成新的现状，再次影响心态，形成恶性循环。 任何积累都需要时间，而且必然需要漫长的时间。也正是因为如此，大多数人才不肯积累，不愿积累，甚至不谢积累。相信积累的力量本质就是相信复利的力量。 越早醒悟越好，坚信积累的力量。 越早越好越早开始的事情没有几个，理财排在第一位。理财困难与矛盾来自这样一个窘境：很难很早开心，等开始的时候已经太晚。 为什么今天的人需要重视理财？第一：人们的平均寿命变得长了；第二：人们可获得收入的工作时间也随之变成了。 理财最难得两个地方是对自我的把控和对风险的把控。但是这两个技能可以通过习得而习得，最重要的是必须通过反复实践。 转移注意力是抵御诱惑的一种常用的有效手段。理财的风险意识必须通过自己的实践、失败、教训、总结才能获得的东西。 所以，理财这件事越早越好，开始学会理财，可能是改善自制力、自控力的方法。 如何开始 从今天开始存钱。 该花就花，有时候就要活在当下。（有时候） 爱面子其实是绝大多数人存不下钱的根本原因。 给自己培养一个不那么费钱的兴趣爱好。 开源节流。开源是正途，努力提高未来的营收能力才是当务之急，花时间提高自己的大脑。 给自己一个机会，在5年之后体会一下突然可以动用一笔闲钱的机会。 躺着赚钱收入分为两种：主动收入和被动收入。主动收入：就是必须做点什才能获取的收入。被动则相反。例如利息。很多人不仅没有“睡后收入”，还有“睡后支出”。分期消费的负担其实很重。创作和课程都是是一个睡后收入的不错选择。]]></content>
      <categories>
        <category>阅读</category>
      </categories>
      <tags>
        <tag>学习</tag>
        <tag>笔记</tag>
        <tag>阅读</tag>
        <tag>生活</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[《新生-七年就是一辈子》阅读笔记]]></title>
    <url>%2Fposts%2F15148%2F</url>
    <content type="text"><![CDATA[谁不想进步呢？什么进步不需要方法论呢？没有救世主，就只能自谋出路。哪怕不是路人甲，其实也一样要不断进步，不是吗？本文主要是学习《新生-七年就是一辈子》的阅读笔记。 人生最重要的概念：复利时代我们恰恰活在一个知识变现很容易、且越来越容易、且变现金额越来越大的时代。 践行最根本的学习与创作：践行。想到了，就去做，做到了，才算践行，做不到，没用。 行动想到了，就按照正确的想法做了 ，不管别人是否理解，这就是践行。想到了，学到了，就当真了；当真了，就当真做了，且真的做到了，这才是践行。 赚钱赚钱慢是一种罪，原罪。赚钱一定要快，要快到超越“第二宇宙速度”，不然你飞不出去。 商业计划你的商业计划就是你的赚钱计划。 衡量标准使得衡量商业计划的标准特别简单： 你可能赚到多少钱？你最快多久可能赚到那么多钱？ 主动选择 重生的关键选择衡量一个人是否真正活着的根本方法，就是看他是否有意愿、有能力做出主动的选择。 放纵自己停止嘲弄他人，忘记自己的优点，适当地放纵一下自己。 对比拿着现状与他人相互比较，必然总有这样那样的不足 —— 而比较带来的幸福感，通常也是虚妄的。即便是要比较，那被比较的对象也应该是“自己的现状”和“自己的未来”；而不是“自己的现状”与“别人的现状” 自信衡量一个人是否真正自信，就看他是否能真心为他人的成功而毫无芥蒂地感到高兴。 升级操作系统每个人的大脑里其实都有一个属于自己的操作系统，真的跟计算机一样！每个人都有一套属于自己的输入输出体系（IO 系统），有着一套属于自己的运行处理机制，这世上没有完美的操作系统，我们必须持续地主动升级我们自己。 方法论我们从计算机上可以学到的，其实是极少数极少数聪明人的思维方式和方法论。 类比思维在面对新事物的时候，我总是告诫自己，暂时先克制寻找类比的冲动，因为不恰当的类比还不如没有类比，甚至，不恰当的类比干脆相当于有毒，会麻醉我们的大脑，阻止我们有效地思考。好的、精妙的类比超级炫酷，可还是要小心为妙，因为类比真的影响思维。 应用场景学会任何一个概念、方法论之后，都要问自己：这个道理还能用在什么地方？ 概念概念是一切知识的基石，概念是一切知识架构的基石。 所谓的“独立思考” —— 少有人真正拥有的高级能力 —— 对其最朴素的描述无非是：能够独立地、正确地使用正确的概念。 非议、争论、鄙视链善恶其实是次要的所谓“人人心里有杆秤”——那秤称的其实是强弱。 让自己更强大面对非议的时候，真正要解决的问题不是去辩解，而是想办法让自己变得更强。 起点在起点上，每个人都一样，其实是没多少选择的，其实大多只能是被动状态麽，这很正常。 产品做出真正好的东西，销售就好像是不存在了一样，放在那里就行。 做好产品把东西做到真好，直至最好，其实是最省心、最省时的方法论。 说服别人说服他人有两个重要的终极诀窍：第一个，让对方自己得出结论，而不是把结论塞给对方；第二个，实际上是第一个的升级版：自己成为榜样，对方若是认同，自然就会追随。 解决问题的方法论有些问题是永远解决不了的解决不了的问题就（暂时）别去解决了罢，面对永存问题，尽力就好。 有些问题是不用解决的有些问题，看起来很重要，实际上却没那么重要（不是不重要），把时间花在解决它们身上，实际上是浪费的，效率低下的。 更多情况下，“细节很重要”是用来吓唬那些没做成过事儿甚至压根就没做过事儿的人的。主次不分，是绝大多数人的永存问题。我们不能这样。如果有问题非要解决不可，我们一定要分清楚那里面的主次，把最重要的先做好，这个做到了之后，再去关注细节，而这样的时候也确实有能力关注更细的细节，否则，本末倒置，一无所是。 有些问题可能会自动消失有一点问题就坐立不安的人，本质上只是天真。 有些问题是自己造成的基础很重要！这么朴素、简单、有效的建议，绝大多数人这一生都没听进去过 —— 然后，最令人啼笑皆非的是，一生都要为此付出巨大代价却又从不自知。 有些问题是其他人的问题为什么要坚持锻炼呢？答案是： 本金最重要。 有些问题是所有人的问题坏事发生在自己身上的时候，自己不吱声，希望有人替自己出头，却又完全不知道“替天行道”实际上是成本很高、风险很大的活动……说实话， 这从某个角度望过去，哪儿是天真啊？不仅是自私，还是深刻而隐秘的恶毒。 大多数问题需要特定的人解决所谓的“平和”只不过是认真思考的结果。 惊喜与创造惊喜的方法论你必须相信你自己会有好运的我真的相信惊喜是可以创造的，而且从一开始就笃信这事儿。乐观是一种需要时间、需要耐心才能生成的一种态度。 尽量不做可能倒霉的事情所谓“尽量不做可能倒霉的事情”，其实只不过是打磨自己的逻辑思考能力，使其完善，乃至于你不大可能去做未来可能产生恶果的事情。 保持开放开放就是可以创造好运和惊喜的，无论在哪个领域。 持续学习学习，从来都是创造惊喜、创造好运的最优路径。学习就是反复打磨概念与方法论，等着注定的惊喜注定地发生。 创造更多的连接只有节点多到一定程度，才可能有“意外的连接”出现。认识很多的人，其实是没用的，因为绝大多数人是没有操作系统的，或者即便有，也是过时的操作系统。认识他们没用，不仅没用，甚至是一种罪，因为你在耽误自己可能的效率。 要想办法认识很多真正拥有高效率的操作系统的人。长期以来，我发现外界的定义都是没用的，学历、身份、地位等各种标签，都是除了迷惑他人之外完全没用的东西。到最后，只有一种方式有用：交流。可能是坐下来喝茶，也可能是读对方的文字，更可能是长期观察。甄别出那些有属于自己的高效操作系统的人，甄别出那些愿意打磨自己的操作系统的人，遇到了，必须马上连接。 保留适当的随机在一些时候，在一定程度上，跨越因果思考与判断，在生活、工作、学习中添加一点随机性，就是创造惊喜的方法论。 多管齐下，齐头并进一定要想办法把自己打造成一个多任务操作系统。不要做一个低级的单任务操作系统。通过恰当的统筹，让自己多开几个进程，齐头并进地去做一些事情，永远是提高效率的基本手段。通过恰当的统筹，让自己多开几个进程，齐头并进地去做一些事情，永远是提高效率的基本手段。 而多管齐下，齐头并进，也是创造惊喜的好方法，理由很简单，效率高了，成果就多了，成果这东西，跟之前提到的“连接”啊、“节点”啊一样，越多越好，这些成果本身也是节点，它们之间也会产生连接，最终一样产生聚变，至于能够获得什么，我们还不知道，但我们知道一定会有所获得。 总结：逻辑很重要、概率学很重要、统筹学很重要 如何回避坏运气成功= 技能+运气所谓“运气”，是完全不可控的，它可能是好的，也可能是坏的，也可能是“0”，即，什么影响都没发生。我们不知道它什么时候发生，不知道它是好是坏，也不知道它好坏的程度到底如何；我们只知道最坏的情况下，坏运气可能导致“灭顶之灾”。 与之相对，技能却是可控的通过刻意练习，绝大多数技能都可以获得极大的提高。通过选择来回避坏运气。选择很重要。甚至可以不夸张地讲，人生就是选择。 在“技能-运气”的横轴上，尽量选择去做靠近左端的活动，就是那些更多依赖技能，更少依赖运气的活动。 调整焦点：有一个不可或缺的方法论 很多人输就输在，对于新兴事物，看不见、看不起、看不懂、来不及。把焦点放在大势自身上，而后开始思考，思考的结果常常是一样的：必须跨界 —— 自己手里正在做的事情，常常与那大势完全没有关系，也并不适合与那大势共存。 真正的大势，很少频繁出现，尤其对个体来说，能够感知的大势更少。 我们在自信这件事儿上，关注的焦点更多在于自己的未来 ，而不是，或者不仅仅是自己的过去或者现在。 不能容错的系统肯定是脆弱的容错机制任何一个在现实世界里运转的系统所面对的，必然是一个不完美的、不理想的、各种意外频繁发生的现实世界。我们最好给自己的操作系统设置一定的容错机制。 冗余设计没有冗余度设计的系统，通常不够健壮，不够可靠。冗余设计，就是为了能够让一个机器（或者系统）在非正常情况下也能运转，要把一些关键的组件安放一个以上…… 万一其中一个坏了，机器依然能够正常运转，甚至可以在机器的运转过程中修复或者替换那个坏掉的组件。我们人类自身就是个“冗余度”很好的设计 ，我们有很多重要器官都是有一个以上的，比如肺、肾、手、足等等。所以，摘掉一个肾、断了一只手、少了一条腿、瞎了一只眼、掉了一只耳朵、少了几根手指或者脚趾…… 这些本质上来看都不大影响一个人继续生活。 一切更为健壮的都要耗费更多的成本容错机制的收获有了容错机制之后，最重要的收获是：学习范围广了，思考更为深入了。 为什么一定要自学自学能力是靠积累增强的自学很简单，其实就是不断习得、积累、研究、打磨、升级那些概念和方法论。 融会贯通融会贯通：只有概念多到一定程度的时候，它们之间才有机会产生“意外的连接”。 自学态度自学这事儿， 方法并不首要，首要的是态度。 不同选手“表现型”选手做事常常不是为了自己的进步 ，“进取型”选手做事是为了自己的进步。 为啥人丑就要多读书？所谓的聪明，虽然可能也受先天条件限制，但聪明确实是可积累、可锻炼的。 人们的生活状态发生变化时，基因也会发生变化。 多读书罢，让自己更聪明一点，也为了下一代。 如何真正消化一本书？阅读功利性大多数情况下，阅读并没有功利性。完整性阅读，是没办法有功利性的，因为其实完全没办法知道所读、所学的东西究竟什么时候才能真正发挥它的核能量。 不可替代别人是不可能帮你吃饭的。同样的道理，别人其实是完全没办法帮你读书的。 阅读思路先大致浏览，知道大致的内容和别人对他的评价。拿来一本书，就好像要打一场仗，打仗之前最好先考察一下地形吧？ 同样的道理，拿来一本书，不应该是抓起来就从第一个字开始读起，一直读到最后……应该先看看目录，再看看附录，仔细读读前言，也不妨在网上先扫扫书评，要先大致对这本书有个了解，然后再开始行动比较好。 消化在读的过程中，不断整理这些概念与方法论之间的关系，其实是“消化”的必要过程。一定要用起来。 总结&amp;预期在阅读的过程中，要不断向后总结，向前预期。这是最基本的理解技巧。教是最好的学习方法。 分享的技巧很简单 真诚，只分享自己确实觉得好的东西；也是真诚，绝对不能居高临下地装蛋；还是真诚，对方完全有可能不理解你。这个概念、这个方法论、这个道理、这个知识，还可以用在什么地方？与喜欢学习的人泡在一起。 选书的基本原则出版社锁定领域知名出版社。 作者靠谱的人写的东西靠谱。 版次版次越高越好。 印次印数越大越好。 印数第一版第一次的首印数。 “编”与“著”优选“著作”。 参考文献更多经典书。 其他要点 索引；尽量不读译作；花时间读书评，亚马逊、豆瓣等；看看牛人在读什么？ 什么是更好的知识？有价值的信息才可以算作知识。知识分为两种，无繁殖能力的和有繁殖能力的。科学方法论，就是一种有繁殖能力的知识，也是迄今为止我觉得最有繁殖能力的知识。有繁殖能力的知识： 可以积累，因为它有积累效应必须应用，因为它有指导意义值得传播，因为它可造福大众 活在未来，而不是当下活在未来超越绝大多数人的窍门其实很简单，就是想办法活在未来。 如何活在未来？笃信逻辑。用逻辑去判断明天会发生什么。 凡事均可以预演做事之前常常要在脑子里预演至少一次 。 顺序4、应该是 学习、工作、生活。不是 生活 、工作、学习。 即:按照未来的你所需要的标准去学习、去工作，将会构建一个完全不同的生活。]]></content>
      <categories>
        <category>阅读</category>
      </categories>
      <tags>
        <tag>学习</tag>
        <tag>笔记</tag>
        <tag>阅读</tag>
        <tag>生活</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[《好好说话》笔记之礼貌地回避问题]]></title>
    <url>%2Fposts%2F27069%2F</url>
    <content type="text"><![CDATA[转移话题不如转移角度，从大方面回答，直接反问原因。 礼貌地回避问题第一步 转移角度把话题重点转移到对方身上，把对方淡谈话主角自己当配角。回家长辈问婚事相关，反问阿姨请教一下阿姨你们家某某好像挺幸福地，阿姨说说呗。 第二步 提升层次隐私上升大问题，把隐私换成科普，解释机制。从大方面去解释问题背后地机制，而不直接回答具体细节；绕过个人工资细节去科普行业情况。 第三步 追问原因追问对方问这个问题地原因，让提问的人自觉无趣。例如：您为什么这么关心我的事，你是这方面有问题？？]]></content>
      <categories>
        <category>阅读</category>
      </categories>
      <tags>
        <tag>学习</tag>
        <tag>笔记</tag>
        <tag>好好说话</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[《好好说话》笔记之在分答上提问]]></title>
    <url>%2Fposts%2F29454%2F</url>
    <content type="text"><![CDATA[分答不需要解释。 用提问赚钱奔小康。 精彩演讲用问题串联第一步 不要问大问题，要问小问题问题太大，太跳跃，答案对你来说没什么用处。例如：如何成为一个好的演讲者？答案：保持平常心。 没什么用 第二步 把问题反过来问一次案件发生后，警察问：有什么没有什么寻常事情发生？侦探问： 当前晚上有没有什么没发生？为什么现在的直播这么火？换一种问法：为什么过去直播没这么火？ 第三步 不要问成功，要问失败的理由失败的理由比成功的原因更有价值 3. 数据结构3.1 管理账户admin 和 unit 用于数据运维，admin 权限大于 unit; admin 和 unit 用于数据运维，admin 权限大于 unit，unit 用户只能看 unit 用户只能看到属于自己的数据，admin 用户可以看到系统 全局的数据。且只有管理员有账户 API 的权限。 3.2 业务账号user 普通用户，direct 导播用户，device 直播机账户。 user 普通用户，direct 导播用户，device 直播机账户。3.3 账号操作 管理员可以创建 unit 用户，user、direct 和 device 均由 unit 管理。 3.3 账号操作管理员可以创建 unit 用户，user、direct 和 device 均由 unit 管理。]]></content>
      <categories>
        <category>阅读</category>
      </categories>
      <tags>
        <tag>学习</tag>
        <tag>笔记</tag>
        <tag>好好说话</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[《好好说话》笔记之用提问求关注]]></title>
    <url>%2Fposts%2F13349%2F</url>
    <content type="text"><![CDATA[背景： 自己讲话没人听 听众来了，昏昏欲睡 听完没什么影响 精彩演讲用问题串联第一步 用提问吸引对方来听问句作为演讲标题。把所有的小问题总结从一个大问题。吸引注意力(点击率)。 第二步 抛问题扔答案，抓注意力不要太快公布正确答案，小问题引起好奇心。好奇心来自于对于自我经验的挑战。逐步抓住大家的好奇心。 第三步 用小问题引出冷知识，留下深刻影响有趣的比有用的问题比较好。 留下一个冷知识。例如为什么屁会臭？]]></content>
      <categories>
        <category>阅读</category>
      </categories>
      <tags>
        <tag>学习</tag>
        <tag>笔记</tag>
        <tag>好好说话</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[《好好说话》笔记之用提问提逼格]]></title>
    <url>%2Fposts%2F19031%2F</url>
    <content type="text"><![CDATA[重要场景: 公司面试最后一句：你对我们公司有什么问题？ 提出有价值的问题顺应充分理解对方的话；从对方所说的话延伸；不要从自己的立场出发； 爱因斯坦问牛顿，如果一个人顺着光跑，跑到哪儿了？ 提升归纳，把一连串的小问题总结一个大问题。总结对方的问题，然后提出来问题，升华。 跳跃遵循对方逻辑。举一反三。把对方的思路跳出来到另一个他自己都没有想到的问题。跨领域，跨学科。]]></content>
      <categories>
        <category>阅读</category>
      </categories>
      <tags>
        <tag>学习</tag>
        <tag>笔记</tag>
        <tag>好好说话</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[《好好说话》笔记之跟父母打电话]]></title>
    <url>%2Fposts%2F33151%2F</url>
    <content type="text"><![CDATA[哄父母开心的三心技巧：安心 舒心 开心。 三心技巧第一心 细节让父母安心老老实实汇报生活现状。不要大而笼统的说一句：一切都好请放心。看什么电影和哪个朋友吃了什么……. 第二心 用问题使他们舒心别用工作，用他们的得心应手的生活来询问。 第三心 拿对比让他们开心父母年纪大了，不可避免被社会边缘化，要把自己的闪光点告诉父母，你变成别人眼中的”别人家的孩子”。舒缓他们的社交压力。 打电话就是沟通场景，把主动权交给对方。]]></content>
      <categories>
        <category>阅读</category>
      </categories>
      <tags>
        <tag>学习</tag>
        <tag>笔记</tag>
        <tag>好好说话</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[《好好说话》笔记之把内向变成优势]]></title>
    <url>%2Fposts%2F39869%2F</url>
    <content type="text"><![CDATA[不同性格的人找到让自己舒服和让别人舒服的说话之道。 如何把你得内向变成优势，内向能hold住全场。 内向说话的优势： 表达的缺陷不是缺陷，反而很可爱； 别人接受你是内向的人，别人会给你加分； 适应专注做事情，有工匠精神。 内向说话怎么做： 自嘲。化解紧张气氛，承认自己内向，别人的印象分会有很大的加分。 建立信任。先让别人新人，然后喜欢自己的话。 由小见大。把主题缩小，细致化。真情实感。]]></content>
      <categories>
        <category>阅读</category>
      </categories>
      <tags>
        <tag>笔记</tag>
        <tag>好好说话</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[《好好说话》笔记之激发别人的善念]]></title>
    <url>%2Fposts%2F26581%2F</url>
    <content type="text"><![CDATA[嘴甜一点，态度低一点，礼貌一点； 如何激发别人的善念，请人帮忙说话的诀窍。 三步回应法第一步 让别人感受到做和不做的差别 诉求要具体，让对方知道有画面感。 A：抱歉我母亲年纪大了，可以请你让个座吗？B：抱歉，我母亲年纪大了，如果这么远的路没人给她让座，她老人家只能坐在地上了。 第二步 努力让对方相信，他的善意不会被糟蹋 善意要扩大，让对方的付出更有意义。 A：抱歉我母亲年纪大，可以请你让个座吗？B：抱歉我母亲年纪大了，如果您愿意让座，我会非常感激，我保证您的好心不会白费，下次如果我遇到其他有需要的人，我一定也会向您一样伸出援手。 第三步 让对方知道自己有选择 让对方有选择。 A：抱歉我母亲年纪大，可以请你让个座吗，拜托拜托，求求你，发发好心把？B： 抱歉我母亲年纪大，可以请你让个座吗，当然这是您的座位，让不让由您来决定。]]></content>
      <categories>
        <category>阅读</category>
      </categories>
      <tags>
        <tag>学习</tag>
        <tag>笔记</tag>
        <tag>好好说话</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[《好好说话》笔记之鼓励一个不求上进的人]]></title>
    <url>%2Fposts%2F19824%2F</url>
    <content type="text"><![CDATA[如何鼓励一个不求上进的人？ 三步鼓励法第一步 降低他对结果的恐惧不努力是人最后的安全区，让他走出安全区，卸下防御；消除他对后果的恐惧。 第二步 用可能性代替目的性目标很单调大可能性无限，不要做比较，让他打起精神；最忌讳作比较。 第三步 营造愿景而不下达具体指令愿景是感召，而非具体承诺，激励的本质是对个体可能性的探索，而非鼓吹或胁迫人家完成的工具。]]></content>
      <categories>
        <category>阅读</category>
      </categories>
      <tags>
        <tag>学习</tag>
        <tag>笔记</tag>
        <tag>好好说话</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[《好好说话》笔记之说特别的话]]></title>
    <url>%2Fposts%2F65425%2F</url>
    <content type="text"><![CDATA[场景：婚礼致辞，领导讲话，主持人念广告 如何在大家都不想听的时候说话化腐朽为神奇的艺术 三步表达法第一步 不要装，要点破最尴尬的是假装自己不尴尬，点破就是换了位置，与观众站在一起，调用气氛。 第二步 该讲的还是要讲想清楚讲话的意义和责任，仪式性的场合致辞的意义大于其说话内容。最好说清楚自己的应该要讲的。 第三步 看清楚给谁听仪式性的场合说的话一般不是给观众听的，而是对主办方听的，替观众吐槽一下可以把场面热回来。]]></content>
      <categories>
        <category>阅读</category>
      </categories>
      <tags>
        <tag>学习</tag>
        <tag>笔记</tag>
        <tag>好好说话</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[《好好说话》笔记之应对反应慢]]></title>
    <url>%2Fposts%2F45767%2F</url>
    <content type="text"><![CDATA[辩论不是说给对方听的，是说给第三方听的，要争取第三方的认可。 慢半拍也能好好说话第一步 复述问题争取时间发现陷阱，用自己的语言复述，荒缪之处自然显示出来。 第二步 慢而不断用一以贯之的逻辑慢慢讲，不能偏离原有逻辑，逻辑线不断。 第三步 化繁为简将大问题归纳小问题，掌握最根本的问题。]]></content>
      <categories>
        <category>阅读</category>
      </categories>
      <tags>
        <tag>学习</tag>
        <tag>笔记</tag>
        <tag>好好说话</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[《好好说话》笔记之拒绝借钱]]></title>
    <url>%2Fposts%2F38639%2F</url>
    <content type="text"><![CDATA[如何拒绝别人借钱 不伤和气不伤钱的回绝之道 拒绝借钱三要点：第一点 少借不如不借借钱的多少与感情远近相关，自己内心的估算少于对方的，折中都不舒服。 不要回答：借多少？ 第二点 先问原因别问金额把战场放在对方那，把主动权抓在手里，购买行为借钱，请用关切的态度来确定对方缺钱的额原因。 第三点 根据对方的原因给出相似的不错理由可以暗示了最近一段时间都没闲钱。]]></content>
      <categories>
        <category>阅读</category>
      </categories>
      <tags>
        <tag>学习</tag>
        <tag>笔记</tag>
        <tag>好好说话</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[《好好说话》笔记之谈加薪]]></title>
    <url>%2Fposts%2F49874%2F</url>
    <content type="text"><![CDATA[请求派：不断强调自己过的多苦，通过强调自己的惨况，请求老板加薪； 老板对你的同情 威胁派：摆出自己不爽，长时间被亏待，我觉得你现在不给我加薪，我就离职。 风险太大 谈判的基础基于对方的人品，是不可取的！ 怎么谈加薪？第一步 确认加薪标准最重要的一步。不要一上去就说加薪。 问出老板加薪的客观标准。 可以问：在我们公司里，想我这一层员工，大概要达到什么样的标准才可以加薪？注意，不是在问还需要做什么才能加薪，而是要问在这个公司里面加薪的客观标准是什么？ 这样加薪是否合理的姿态，而不是老板个人决定。 第二步 讨论工作表现大大方方与老板讨论个人表现。假如自己没有达标，通过条件交换。例如在A项目业绩超标，B没有达标，那么可不可以通过A的业绩补偿B的呢？ 第三步 带领老板想想未来老板如果我们得到加薪，我们接下来就可以在项目中更加努力。 总之让老板觉得在公司中给你加薪是未来公司发展最值得的一件事。]]></content>
      <categories>
        <category>阅读</category>
      </categories>
      <tags>
        <tag>学习</tag>
        <tag>笔记</tag>
        <tag>好好说话</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[《好好说话》笔记之回应"认真你就输了"]]></title>
    <url>%2Fposts%2F25279%2F</url>
    <content type="text"><![CDATA[吵架。 认真你就输了，死活不讲道理。 三步回应法第一步 想清楚吵架目的争夺话语权，并提出自己解决方案。 第二步 同理反抽根据对方的逻辑得出对方不对的结论。“认真你就输了”。 答：“我们只是在讨论问题，你竟然在计较输赢？” 第三步 降维打架让对方觉得你们不是一个层次的人，你高于对方。 在吵架中取得话语权，并且将对方的重新新的谈判或者辩论，这才是现代谈判的王道！]]></content>
      <categories>
        <category>阅读</category>
      </categories>
      <tags>
        <tag>学习</tag>
        <tag>笔记</tag>
        <tag>好好说话</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[《好好说话》笔记之让步法则]]></title>
    <url>%2Fposts%2F45108%2F</url>
    <content type="text"><![CDATA[谈判，寻求让步方式。 反例：生活中的砍价。每次加一点，再加一点。爬楼梯，“挤牙膏”让步。 ###跳悬崖谈判 一开始一步退，等对方压力累积到一定程度后，再一口气戏剧性的大让步。 咬定原本底线，累计压力，不轻易退让； 处于某个特殊的原因，突然间一松动，愿意一口气做出大幅度让步； 表示出态度，在我做出了很大的让步，你再逼我，就有点欺人太甚； 让人感觉这个机会再不把握就失去了！]]></content>
      <categories>
        <category>阅读</category>
      </categories>
      <tags>
        <tag>学习</tag>
        <tag>笔记</tag>
        <tag>好好说话</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[《好好说话》笔记之聆听]]></title>
    <url>%2Fposts%2F55821%2F</url>
    <content type="text"><![CDATA[如何成为好的聆听者？ 主动聆听才能打开心门。 聆听不是好好听人家说话。 采用主动式聆听。 主动式聆听三部曲第一步 善用反馈 反馈方式:无声（点头，微笑）和有声（真的呀？….） 例子：郭靖和老顽童？禁忌：不要说我明白你的感受！不要表示理解对方。 第二步 事实重复归纳对方的重点，重复一遍，表达一遍，及时反馈。 第三步 寻找共鸣对方的话题你不合意，就尽量寻找共鸣的话题。 上级说：你喜欢喝啤酒吗？下级：你喝啤酒一般喜欢配什么吃的呢？下级：炸鸡（或者其他）。下级：我超爱吃炸鸡，你喜欢吃哪家店的？ 把啤酒引向了炸鸡（其他） 不要用刻意迎合对方来寻找共鸣。]]></content>
      <categories>
        <category>阅读</category>
      </categories>
      <tags>
        <tag>学习</tag>
        <tag>笔记</tag>
        <tag>好好说话</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[《好好说话》笔记之对上级说不]]></title>
    <url>%2Fposts%2F54874%2F</url>
    <content type="text"><![CDATA[千万不要对老板说没办法，要说就要说正在想办法； 老板提出来的要求，合理的叫训练，不合理的叫锻炼。 领导也是人，使人总有犯错的时候，做好了是上级的，做不好就是我的错。 对老板说不，不是不行是要讲智慧。 怎么对上级说不第一步 战略上高度肯定取得信任。 表态：表明我没有抵触情绪，理解他的出发点。 第二步 成本上精密核算 用事实和数据证明此事不可行。 最关键的一步。让上级知道这事情划不来，而你也是在尽力执行，不是在和他对着干。详实的论据是你的支撑 第三步 决策权完全上交用中立的态度让领导自己打消念头。 做出决策权完全上交的姿态。 不要让老板觉得他自己算的不好。 不动声色将你的成本核算给他看，绝对不能做。]]></content>
      <categories>
        <category>阅读</category>
      </categories>
      <tags>
        <tag>学习</tag>
        <tag>笔记</tag>
        <tag>好好说话</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[《好好说话》笔记之你行你上]]></title>
    <url>%2Fposts%2F7736%2F</url>
    <content type="text"><![CDATA[背景：别人在推脱责任的时候，总喜欢说”你行你上”。 原因：对方不想承担自己的责任。 如何对付”你行你上”?第一步 澄清各自的角色和对方没有什么交集，在意的问题能否解决对实际生活影响很小，那可以简单澄清角色不同，责任自然不一样，所有自己不一定要“行”，也不需要“上”。 例子：我想吃个蛋，难不成自己会下蛋？ 第二步 指出对方在逃避有交集，对方制造的问题有影响，就是指出对方的逻辑漏洞。 原话的逻辑是：有能力的该上，没能力的人不该上。 那么，我承认上的人必须有能力，但是就意味着有能力的人必须上吗？ 第三步 锁定对方的责任当对方的存在本身就影响我们的生活，就可以锁定对方的责任。 三个方法没有优劣和先后之别，因场景稍有不同。]]></content>
      <categories>
        <category>阅读</category>
      </categories>
      <tags>
        <tag>学习</tag>
        <tag>笔记</tag>
        <tag>好好说话</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[《好好说话》笔记之社交喝酒]]></title>
    <url>%2Fposts%2F47410%2F</url>
    <content type="text"><![CDATA[社交不喝酒，肝脏好朋友； 不擅长喝酒，在酒桌上就很尴尬。 饭桌喝酒，也只是活跃饭桌气氛，未闭合其他人沟通。 饭桌策略：最佳配角策略 当作有人都想在饭桌成为那个最闪亮的人的时候，配角就是最耀眼最抢手的。 如何在酒桌上聊天？选择合适的话题一个会聊天的人是让对方对你知无不言言无不尽，饭局结束都觉得意犹未尽。排除对方的工作（万一对方最近工作烦心）、家庭（除非对方主动提起）、我们所认识的共同的某个朋友。 比较合适话题：年轻人聊星座，有孩子的人聊儿女，没有孩子聊业余爱好。 进行合适的提问，延续话题提问的4W循环原则，中间插入我可能没有你这么棒的感慨，让对方兴致勃勃，可以让话题不断延续。 4W循环原则:喜欢什么？哪个种类？为什么？怎么做到的？ 根据话题归纳有点，进行适当的恭维当话题足够深入时候，我们可以概括对方的中心思想，并进行对对方有点的价值升华，展开恭维。 必须赋予人家的爱好，他本人都没有的想到的牛逼意义。 告诉对方，他的爱好表达了什么样的情操？]]></content>
      <categories>
        <category>阅读</category>
      </categories>
      <tags>
        <tag>学习</tag>
        <tag>笔记</tag>
        <tag>好好说话</tag>
        <tag>沟通表达</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[《好好说话》笔记之道歉]]></title>
    <url>%2Fposts%2F19497%2F</url>
    <content type="text"><![CDATA[道歉是人生的加分项！ 道歉两条红线： 第一：绝不能说这件错没有那么严重； 事情不够糟 第二：绝对不能说这件事不全是我的错； 试图澄清自己的责任不够大 怎么道歉 蚂蚁搬大象 道歉的时候尽可能把责任往自己身上揽，甚至包揽到一个夸张的地步，让想要指责你的人不但不会继续落井下石，甚至可能会反过头来劝上两句。 就像一只蚂蚁搬动大象，搬不动的时候要说：是我自己努力不够，准备不充分，才搬不动的。 这样别人就会说，你怎么会这么想呢？你看着大象这么大，怎么可能是你这只小蚂蚁能够搬得动的呢？对呀，你太过苛责自己了。这也不能全怪你，那些当初比你去搬大象的人他们也要检讨自己。 给人的印象就是，你这只蚂蚁想要很努力的搬动大象的责任，同时本人也发自内心的搬不动是自己的错，这样别人才会觉得搬不动真的不是你的错。 例子：包贝尔婚礼闹伴娘事件（红线），皇帝的罪己诏（蚂蚁搬大象）；]]></content>
      <categories>
        <category>阅读</category>
      </categories>
      <tags>
        <tag>学习</tag>
        <tag>笔记</tag>
        <tag>好好说话</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[《好好说话》笔记之自我介绍]]></title>
    <url>%2Fposts%2F12298%2F</url>
    <content type="text"><![CDATA[演说如何自我介绍？ 职场面试，念简历者死！ 面试的时候自我介绍是一个坑。 当面试官问让你自我介绍，不是让你把简历（个人信息，奖项，毕业院校…）背一遍； 而更加深层次的含义是你在最短的时间里给人留下的深刻印象的能力 让面试官记住你 主要有三个步骤。 让面试官记住你的的三个步骤第一步 贴标签绰号：形象、生动、概括力，传播力 自己给自己一个标签。 标签的原则：看起来是缺点，其实是特点，仔细想想是优点的标签； 专属于自己的词，不显得自吹自擂，偷偷把自己给夸了 第二步 讲故事一个有趣生动的故事，让自己的标签有画面感，生动鲜活起来； 故事中加入声音，语气、对话，表情等细节 第三步 谈愿景描述和谐的景象，不要自己说的完美，只需要把自己的特点包装成和公司的需要恰到好处。 例如：强迫症。 精心设计，让别人记住你！]]></content>
      <categories>
        <category>阅读</category>
      </categories>
      <tags>
        <tag>学习</tag>
        <tag>笔记</tag>
        <tag>好好说话</tag>
        <tag>生活</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[《好好说话》笔记之砍价]]></title>
    <url>%2Fposts%2F12618%2F</url>
    <content type="text"><![CDATA[谈判如何砍价？ 不懂“掀桌”，只能滚蛋！ 掀桌的三步，一步不能缺第一步表达自己想上桌的意愿，给对方一种稳赚的感觉，把对方拉上谈判桌； 第二步等对方上桌之后，告诉对方还有一个不友好的第三者也在这张桌上，为后面掀桌埋下伏笔，同时也建立一张安全网，让对方依然和你保持一个船上； 第三步当对方给出条件之后，态度立即来个大逆转，从极度开心到极度不开心，吓死对方，让对方面临两种选择交易失败（之前他的所有聊天成本泡汤）和交易继续（接受你的条件），突然把对方一脚踢开； 注意事项不要进店立即问价，要在最后关头问价！ 不完全会成功，因为你的条件要在对方的底线内！ 掀桌的核心不在于掀桌，在于上桌和安全网！]]></content>
      <categories>
        <category>阅读</category>
      </categories>
      <tags>
        <tag>学习</tag>
        <tag>笔记</tag>
        <tag>好好说话</tag>
        <tag>生活</tag>
        <tag>喜马拉雅</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[《好好说话》笔记之辞职]]></title>
    <url>%2Fposts%2F4571%2F</url>
    <content type="text"><![CDATA[好的辞职谈话和好的面试表现同样两个重要！ 反例：辞职的时候说的痛快、 畅所欲言； 职场是个小圈子，贴的最久的标签是离职时给人的印象； 马云说：员工离职原因有两种：钱不到位或者心委屈了；归根结底：干的不爽。辞职的时候找靠谱理由是为了给上司留面子。 优质辞职三层意思：告知去处；上司问：接下来怎么安排？如果想保持离职前的人脉，对于离职后的计划不要隐瞒； 反例:有人签好的下一家，却说我要留学，在家休息等无厘头理由 告知去处不是告诉老板你拿到了offer，工资多少； 慎选理由； 反例:直接了当的说薪资和人际问题 温和说：我不太适应这个公司的文化，大家都太内敛了，而我比较外向，个性不太一样。 既不伤人，又表达了原因 表示感激；谈谈在公司收获，成长；辞职后的关系上下级转变为平等（前辈和新人）；请教自己不足和自己的发展；如果老板指责你不忠诚,只能表示遗憾； 感激是为了自己的专业态度，别为感情拖泥带水体现自己的职业性。 例子：关羽挂印封金，辞别曹操，追寻旧主刘备。]]></content>
      <categories>
        <category>阅读</category>
      </categories>
      <tags>
        <tag>学习</tag>
        <tag>笔记</tag>
        <tag>好好说话</tag>
        <tag>生活</tag>
        <tag>喜马拉雅</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[解决安装Samba时浏览器打开不成功]]></title>
    <url>%2Fposts%2F21067%2F</url>
    <content type="text"><![CDATA[最开始以为是配置文件或者服务的问题，同时用testparm检测配置文件没有问题，后面发现是SElinux没有关闭。 如何关闭SELinux第一步 查看selinux状态查看selinux的详细状态，如果为enable则表示为开启 1# /usr/sbin/sestatus -v 第二步 查看selinux的模式1# getenforce 第三步 关闭SELinux 永久性关闭（这样需要重启服务器后生效） 1# sed -i 's/SELINUX=enforcing/SELINUX=disabled/' /etc/selinux/config 临时性关闭（立即生效，但是重启服务器后失效） 12# setenforce 0#设置selinux为permissive模式（即关闭） 12# setenforce 1#设置selinux为enforcing模式（即开启）]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>学习</tag>
        <tag>问题</tag>
      </tags>
  </entry>
</search>
