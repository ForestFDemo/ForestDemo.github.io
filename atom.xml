<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>DemoChen</title>
  
  <subtitle>你好，我是森林</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://forestfdemo.github.io/"/>
  <updated>2018-03-15T09:49:17.810Z</updated>
  <id>https://forestfdemo.github.io/</id>
  
  <author>
    <name>DemoChen</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Python学习笔记</title>
    <link href="https://forestfdemo.github.io/2018/03/15/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>https://forestfdemo.github.io/2018/03/15/python学习笔记/</id>
    <published>2018-03-15T06:10:32.000Z</published>
    <updated>2018-03-15T09:49:17.810Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>User:DemoChen<br>Date:2018-02-14<br>Mark:书籍《Python编程从入门到实践》</p></blockquote><h3 id="第三章"><a href="#第三章" class="headerlink" title="第三章"></a>第三章</h3><h4 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h4><ul><li>概念</li></ul><p>列表由一系列按特定顺序排列的元素组成。可以创建包含字母表中所有字母、数字0~9或 所有家庭成员姓名的列表;也可以将任何东西加入列表中，其中的元素之间可以没有任何关系。鉴于列表通常包含多个元素，给列表指定一个表示复数的名称(如letters、digits或names)是 个不错的主意。</p><ul><li>语法：用方括号<code>([])</code>来表示列表，并用逗号来分隔其中的元素。</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">bicycles = [&apos;demo&apos;, &apos;chen&apos;, &apos;sen&apos;, &apos;lin&apos;]</span><br><span class="line">print(bicycles)</span><br></pre></td></tr></table></figure><ul><li>访问列表元素</li></ul><p>访问列表中的元素是通过<strong>索引</strong>获取的，而索引是从0开始的。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">bicycles = [&apos;demo&apos;, &apos;chen&apos;, &apos;sen&apos;, &apos;lin&apos;]</span><br><span class="line">print(bicycles)</span><br><span class="line">print(&quot;取第0个索引:&quot; + bicycles[0])</span><br><span class="line">print(&quot;取第1个索引:&quot; + bicycles[1])</span><br><span class="line">print(&quot;取第最后一个索引的值:&quot; + bicycles[-1])</span><br></pre></td></tr></table></figure><p>运行结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">➜day1 python  dsc.py</span><br><span class="line">[&apos;demo&apos;, &apos;chen&apos;, &apos;sen&apos;, &apos;lin&apos;]</span><br><span class="line">取第0个索引:demo</span><br><span class="line">取第1个索引:chen</span><br><span class="line">取第-1个索引:lin</span><br></pre></td></tr></table></figure><p>结合<a href="https://www.jianshu.com/p/bf2c88e3974f" target="_blank" rel="noopener">第0天</a>的知识，我们现在对列表元素进行拼接的操作。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">bicycles = [&apos;demo&apos;, &apos;chen&apos;, &apos;sen&apos;, &apos;lin&apos;]</span><br><span class="line">res = &quot;My name is &quot; + bicycles[0] + &quot;!&quot;;</span><br><span class="line">print(res)</span><br></pre></td></tr></table></figure><p>运行结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">My name is demo!</span><br></pre></td></tr></table></figure><ul><li>修改列表元素</li></ul><p>修改元素的值可以理解为通过索引获取需要修改的值，然后重新赋值。</p><p>代码示例:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">bicycles = [&apos;demo&apos;, &apos;chen&apos;, &apos;sen&apos;, &apos;lin&apos;]</span><br><span class="line">print(bicycles)</span><br><span class="line">bicycles[1] = &apos;Name&apos;;</span><br><span class="line">print(bicycles)</span><br></pre></td></tr></table></figure><p>可以理解为:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">bicycles = [&apos;demo&apos;, &apos;chen&apos;, &apos;sen&apos;, &apos;lin&apos;]</span><br><span class="line">print(bicycles)</span><br><span class="line">change_res = bicycles[1];</span><br><span class="line">change_res = &apos;Name&apos;;</span><br><span class="line">bicycles[1] = change_res;</span><br><span class="line">print(bicycles)</span><br></pre></td></tr></table></figure><p>运行结果:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[&apos;demo&apos;, &apos;chen&apos;, &apos;sen&apos;, &apos;lin&apos;]</span><br><span class="line">[&apos;demo&apos;, &apos;Name&apos;, &apos;sen&apos;, &apos;lin&apos;]</span><br></pre></td></tr></table></figure><ul><li>添加列表元素</li></ul><p>添加元素主要有两种方式：列表末尾添加元素，列表中插入元素(包含开头)。其中不能影响其他的元素。</p><p>代码示例:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">bicycles = [&apos;demo&apos;, &apos;chen&apos;, &apos;sen&apos;, &apos;lin&apos;]</span><br><span class="line">print(bicycles)</span><br><span class="line">bicycles.append(&apos;good&apos;)</span><br><span class="line">print(bicycles)</span><br></pre></td></tr></table></figure><p>运行结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[&apos;demo&apos;, &apos;chen&apos;, &apos;sen&apos;, &apos;lin&apos;]</span><br><span class="line">[&apos;demo&apos;, &apos;chen&apos;, &apos;sen&apos;, &apos;lin&apos;, &apos;good&apos;]</span><br></pre></td></tr></table></figure><p>甚至可以创建一个没有任何的元素空的列表，然后不断的追加元素。或者可以从开头或者中间插入元素。</p><p>代码示例:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">null_list = []</span><br><span class="line">null_list.append(&apos;hello&apos;)</span><br><span class="line">null_list.append(&apos;senlin&apos;)</span><br><span class="line">null_list.append(&apos;chen&apos;)</span><br><span class="line">print(null_list)</span><br></pre></td></tr></table></figure><p>运行结果:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[&apos;hello&apos;, &apos;senlin&apos;, &apos;chen&apos;]</span><br></pre></td></tr></table></figure><p><code>insert()</code>可以在任意位置添加元素。</p><p>代码示例:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">in_list = [&apos;hello&apos;, &apos;senlin&apos;, &apos;chen&apos;]</span><br><span class="line">in_list.insert(1, &apos;name&apos;)</span><br><span class="line">print(in_list)</span><br></pre></td></tr></table></figure><p>运行结果:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[&apos;hello&apos;, &apos;name&apos;, &apos;senlin&apos;, &apos;chen&apos;]</span><br></pre></td></tr></table></figure><ul><li>删除列表元素</li></ul><p>删除元素的方法有:<code>del</code>删除、<code>pop()</code>弹出删除、根据<code>值</code>删除。</p><p>代码示例:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">list = [&apos;on&apos;,&apos;list&apos;,&apos;time&apos;,&apos;man&apos;,&apos;like&apos;,&apos;goods&apos;]</span><br><span class="line">del list[0]</span><br><span class="line">print(&quot;删除第0个元素的值&quot;,list)</span><br><span class="line">print(&quot;弹出删除第最后一个元素的值&quot;,list.pop())</span><br><span class="line">print(&quot;弹出删除第一个元素的值&quot;,list.pop(1))</span><br><span class="line">print(list)</span><br><span class="line">print(&quot;根据值删除&quot;,list.remove(&apos;man&apos;))</span><br><span class="line">print(list)</span><br></pre></td></tr></table></figure><p>运行结果:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">删除第0个元素的值 [&apos;list&apos;, &apos;time&apos;, &apos;man&apos;, &apos;like&apos;, &apos;goods&apos;]</span><br><span class="line">弹出删除第最后一个元素的值 goods</span><br><span class="line">弹出删除第一个元素的值 time</span><br><span class="line">[&apos;list&apos;, &apos;man&apos;, &apos;like&apos;]</span><br><span class="line">根据值删除 None</span><br><span class="line">[&apos;list&apos;, &apos;man&apos;]</span><br></pre></td></tr></table></figure><ul><li>组织列表</li></ul><p>组织列表中主要是针对列表进行排序等操作。排序分为临时排序(<code>sorted()</code>)和永久排序(<code>sort()</code>)。<code>reverse()</code>不是指按与字母顺序相反的顺序排列列表元素，而只是反转列表元素的排 列顺序:<code>reverse()</code>永久性地修改列表元素的排列顺序，但可随时恢复到原来的排列顺序，为此只需对列表再次调用<code>reverse()</code>即可。</p><p>代码示例:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">cars = [&apos;bmw&apos;, &apos;audi&apos;, &apos;toyota&apos;, &apos;subaru&apos;]</span><br><span class="line">cars.sort()</span><br><span class="line">print(cars) #根据字母永久排序</span><br><span class="line">cars = [&apos;bmw&apos;, &apos;audi&apos;, &apos;toyota&apos;, &apos;subaru&apos;]</span><br><span class="line">cars.sort(reverse=True)</span><br><span class="line">print(cars) #根据字母相反方向永久排序</span><br><span class="line">cars = [&apos;bmw&apos;, &apos;audi&apos;, &apos;toyota&apos;, &apos;subaru&apos;]</span><br><span class="line">cars.reverse()</span><br><span class="line">print(cars) #倒着打印列表</span><br></pre></td></tr></table></figure><p>运行结果:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[&apos;audi&apos;, &apos;bmw&apos;, &apos;subaru&apos;, &apos;toyota&apos;]</span><br><span class="line">[&apos;audi&apos;, &apos;bmw&apos;, &apos;subaru&apos;, &apos;toyota&apos;]</span><br><span class="line">[&apos;toyota&apos;, &apos;subaru&apos;, &apos;bmwmw&apos;, &apos;audi&apos;]</span><br><span class="line">[&apos;subaru&apos;, &apos;toyota&apos;, &apos;audi&apos;, &apos;bmw&apos;]</span><br></pre></td></tr></table></figure><ul><li>获取元素长度</li></ul><p>代码示例:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cars = [&apos;bmw&apos;, &apos;audi&apos;, &apos;toyota&apos;, &apos;subaru&apos;]</span><br><span class="line">res = len(cars)</span><br><span class="line">print(res)</span><br></pre></td></tr></table></figure><p>运行结果为：<code>4</code></p><p>至此，第三章的列表已经学习完毕，本章的函数不是特别多。主要的知识点有概念，获取值，修改和排序等操作。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;User:DemoChen&lt;br&gt;Date:2018-02-14&lt;br&gt;Mark:书籍《Python编程从入门到实践》&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;第三章&quot;&gt;&lt;a href=&quot;#第三章&quot; class=&quot;headerlink&quot;
      
    
    </summary>
    
      <category term="Python" scheme="https://forestfdemo.github.io/categories/Python/"/>
    
    
      <category term="Python" scheme="https://forestfdemo.github.io/tags/Python/"/>
    
  </entry>
  
</feed>
